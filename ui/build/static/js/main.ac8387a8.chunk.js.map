{"version":3,"sources":["App/pages/Dashboard.jsx","App/pages/Keypad.jsx","App/pages/Qr.jsx","App/pages/Voice.js","App/pages/assets/paths/crow_head.svg","App/pages/components/LoadingIcon.jsx","App/App.jsx","index.js"],"names":["Dashboard","props","show","setState","hide","state","nodes","msgs","usrs","numAuthNodes","numOtherNodes","initiateRegister","bind","this","socket","savedState","emit","on","data","console","log","parseData","scrollToBottom","liftState","d","prevState","action","clients","clientNodeCount","map","client","database","number","users","el","scrollIntoView","behavior","registerHandler","username","document","getElementById","value","fullname","style","color","threshold","total","height","Button","className","variant","onClick","containerClassName","closeOnOuterClick","onClose","id","placeholder","size","RenderMap","active","Container","fluid","width","Row","marginLeft","item","i","key","ref","margin","borderStyle","usr","ShareCounter","user","num","num_shares","React","Component","Col","Array","fill","_","Math","min","RenderIcon","icon","label","nodeType","Provider","defaultProps","cookies","Cookies","pw","Keypad","updateCookie","event","preventDefault","set","togglescreen","register","opened","enter","styleBtnPress","clr","checkComplete","btn","innerHTML","onSubmit","type","name","autoFocus","length","http","XMLHttpRequest","url","window","location","hostname","open","setRequestHeader","shouldRegister","send","JSON","stringify","get","boxShadow","fontSize","setTimeout","entry","toString","WelcomePage","Qr","handleScan","result","colonPos","indexOf","slice","password","random","substring","code","registerQR","maxWidth","marginBottom","display","justifyContent","flexDirection","alignItems","delay","onError","handleError","onScan","Voice","toggleRecording","record","box","update_cookie","onStop","recordedBlob","blob","position","visualSetting","strokeColor","backgroundColor","_extends","Object","assign","target","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref","svgRef","title","viewBox","forwardRef","Keyframes","Spring","next","a","from","strokeDashoffset","config","mass","tension","friction","precision","socketIOClient","secure","App","dashboardState","registerUsername","numRegistered","registerMode","liftstate","settingsJSON","s","parseInt","Switch","render"],"mappings":"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","file":"static/js/main.ac8387a8.chunk.js","sourcesContent":["/* eslint-disable react/no-array-index-key */\nimport React from 'react';\nimport {\n  Container, Row, Col, Button,\n} from 'react-bootstrap';\nimport { GiSpeaker, GiCyborgFace, GiLockedFortress } from 'react-icons/gi';\nimport {\n  FaBarcode, FaGlobe, FaServer, FaArrowCircleRight,\n} from 'react-icons/fa';\nimport { IconContext } from 'react-icons';\nimport PropTypes from 'prop-types';\nimport Modal from 'simple-react-modal';\n\nimport './Dashboard.css';\n\nexport default class Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nodes: [],\n      msgs: [],\n      usrs: [],\n      numAuthNodes: 0,\n      numOtherNodes: 0,\n      show: false,\n    };\n\n    this.initiateRegister = this.initiateRegister.bind(this);\n  }\n\n  // Listen for new data coming in on testchannel\n  // parse it for useful information\n  componentDidMount() {\n    const { socket, savedState } = this.props;\n    if (savedState !== null) {\n      this.setState(savedState);\n    }\n    socket.emit('DashboardUpdate')\n    socket.on('DashboardUpdate', (data) => {\n        console.log(data);\n        this.parseData(data);\n    });\n    this.scrollToBottom();\n  }\n\n  // When state updates, smooth scroll the output log to its bottom\n  componentDidUpdate() {\n    this.scrollToBottom();\n  }\n\n  // when other screens are visited,\n  // persist the state of the dashboard\n  componentWillUnmount() {\n    const { liftState } = this.props;\n    liftState(this.state);\n  }\n\n  // show the registration modal\n  show = () => {\n    this.setState({ show: true });\n  }\n\n  // hide the registration modal\n  hide = () => {\n    this.setState({ show: false });\n  }\n\n  // Retrieve useful information from the multicast message\n  parseData(d) {\n    this.setState((prevState) => ({\n        msgs: [...prevState.msgs, `${d.action}`],\n    }));\n      if (d.clients){ \n        let clientNodeCount = 0;\n        d.clients.map((client) => {\n            if (client.database === 'auth'){\n                this.setState({\n                    numAuthNodes: client.number\n                })\n            } else {\n                clientNodeCount += 1;\n            }\n        })\n        this.setState({\n            nodes: d.clients,\n            numOtherNodes: clientNodeCount\n        })\n      }\n      if (d.users){ \n        this.setState({\n            usrs: d.users,\n        })\n      }\n  }\n\n\n  // smooth scroll to bottom to keep new messages in focus\n  scrollToBottom() {\n    this.el.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  // Check if username and fullname are both supplied\n  // before initiating the register script on the backend\n  initiateRegister() {\n    const { registerHandler } = this.props;\n    const username = document.getElementById('username').value;\n    const fullname = document.getElementById('fullname').value;\n    if (username === '' || fullname === '') {\n      document.getElementById('send-arrow').style.color = 'red';\n    } else {\n      registerHandler(username, fullname);\n    }\n  }\n\n  render() {\n    const { state } = this;\n    const {\n      show, nodes, msgs, usrs, numAuthNodes, numOtherNodes\n    } = state;\n    const { threshold, total } = this.props;\n    return (\n      <div style={{ height: '100%' }}>\n        <Button className=\"register-btn\" variant=\"dark\" onClick={this.show}>\n          Register a new user\n        </Button>\n        <Modal\n          className=\"username-modal\" // this will completely overwrite the default css\n          containerClassName=\"modal-container\"\n          closeOnOuterClick\n          show={show}\n          onClose={this.hide}\n        >\n          <h3 className=\"modal-title\">Register a New User</h3>\n          <div className=\"modal-background\">\n            <div className=\"input-boxes\">\n              <input id=\"username\" placeholder=\"username\" />\n              <input id=\"fullname\" placeholder=\"fullname\" />\n            </div>\n            <div id=\"send-arrow\" className=\"icon-holder\">\n              <FaArrowCircleRight className=\"clickable\" onClick={this.initiateRegister} size={32} />\n            </div>\n          </div>\n\n        </Modal>\n        <h3 className=\"section_heading\">Nodes Online</h3>\n        <RenderMap active={nodes} threshold={threshold} numAuthNodes={numAuthNodes} numOtherNodes={numOtherNodes}/>\n        <br />\n\n        <Container fluid style={{ height: '40%', width: '95%' }}>\n          <Row style={{ height: '5%', width: 'auto' }}>\n            <h3 className=\"section_heading\" style={{ width: '45%', marginLeft: '0px' }}>Output Log</h3>\n            <h3 className=\"section_heading\" style={{ width: '45%' }}>Current Users</h3>\n          </Row>\n          <Row style={{ height: '90%', width: 'auto' }}>\n            <div className=\"col log overflow-auto\">\n              {msgs && msgs.map((item, i) => <p key={i}>{item}</p>)}\n              <div ref={(el) => { this.el = el; }} />\n            </div>\n            <div className=\"col\" style={{ margin: '0px' }}>\n              <Container fluid style={{ height: '100%', width: '100%', borderStyle: 'none' }}>\n                <Row style={{ height: '100%', width: 'auto' }}>\n                  {usrs && usrs.map((usr, i) => (\n                    <ShareCounter\n                      key={i}\n                      usr={usr.user}\n                      num={usr.num_shares}\n                      threshold={threshold}\n                      total={total}\n                    />\n                  ))}\n                </Row>\n              </Container>\n            </div>\n          </Row>\n        </Container>\n        <br />\n      </div>\n    );\n  }\n}\n\n// this function creates a bar indicater to show how many\n// shares a user has submitted\n// it takes the following as props:\n// total - total number of shares\n// threshold - threshold value for registration\n// num - number of shares designated user has\n// usr - the username to display\nfunction ShareCounter(props) {\n  const {\n    total, num, usr, threshold,\n  } = props;\n  return (\n    <Col>\n      <Container>\n        {\n          (total - num > 0)\n            && Array(total - num).fill(' ').map((_, i) => <Row key={i} className=\"empty\" style={{ height: '50px', width: '50px', margin: '0 auto 0 auto' }} />)\n}\n        {Array(Math.min(total, num)).fill(' ').map((_, i) => <Row key={i} className={num >= threshold ? 'authorized' : 'unauthorized'} style={{ height: '50px', width: '50px', margin: '0 auto 0 auto' }} />)}\n      </Container>\n      <p>\n        {usr}\n        {' '}\n        (\n        {num}\n        /\n        {threshold}\n        )\n      </p>\n    </Col>\n  );\n}\n\n// this function takes care of displaying whichever nodes are\n// currently in state (the nodes that have been registered to the backend)\nfunction RenderMap(props) {\n  return (\n    <Container fluid className={props.numOtherNodes < props.threshold ? 'unauthorized' : ''} style={{ width: '95%' }}>\n      <Row style={{ width: 'auto' }}>\n        <RenderIcon icon={<GiLockedFortress />} label=\"Auth Node\" number={props.numAuthNodes}/>\n      </Row>\n      <Row style={{ width: 'auto' }}>\n        {props.active && props.active.map((nodeType, i) => {\n          switch (nodeType.database) {\n            case 'face':\n              return <RenderIcon key={i} icon={<GiCyborgFace />} label=\"Face ID\" number={nodeType.number} />;\n            case 'web':\n              return <RenderIcon key={i} icon={<FaGlobe />} label=\"Web ID\" number={nodeType.number} />;\n            case 'other':\n              return <RenderIcon key={i} icon={<FaServer />} label=\"Unknown Node\" number={nodeType.number}  />;\n            case 'voice':\n              return <RenderIcon key={i} icon={<GiSpeaker />} label=\"Speech ID\" number={nodeType.number} />;\n            case 'qr':\n              return <RenderIcon key={i} icon={<FaBarcode />} label=\"QR Scan ID\" number={nodeType.number} />;\n          }\n        })}\n      </Row>\n    </Container>\n  );\n}\n\nfunction RenderIcon(props) {\n  return (\n    <IconContext.Provider value={{ size: '5em' }}>\n      <Col>\n        {props.icon}\n        <h3>{props.label} (x{props.number})</h3>\n      </Col>\n    </IconContext.Provider>\n  );\n}\n\nDashboard.defaultProps = null;\n\nDashboard.propTypes = {\n  liftState: PropTypes.func.isRequired,\n  socket: PropTypes.shape({}).isRequired,\n  savedState: PropTypes.shape({}),\n  registerHandler: PropTypes.func.isRequired,\n  threshold: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n};\n","/* eslint-disable jsx-a11y/heading-has-content */\n/* eslint-disable jsx-a11y/no-autofocus */\nimport React from 'react';\nimport './keypad.css';\nimport Cookies from 'universal-cookie';\nimport PropTypes from 'prop-types';\n\nconst cookies = new Cookies();\n\nlet pw = '';\n\nexport default class Keypad extends React.Component {\n  constructor(props) {\n    super(props);\n    const { register } = this.props;\n    this.state = {\n      opened: false || register,\n    };\n\n\n    this.togglescreen = this.togglescreen.bind(this);\n    this.enter = this.enter.bind(this);\n    this.styleBtnPress = this.styleBtnPress.bind(this);\n    this.clr = this.clr.bind(this);\n    this.checkComplete = this.checkComplete.bind(this);\n    this.updateCookie = this.updateCookie.bind(this);\n  }\n\n    // Set the cookie to contain the current user's username\n    updateCookie = (event) => {\n      event.preventDefault();\n\n      const username = document.getElementById('i_username').value;\n\n      cookies.set('username', username);\n      this.togglescreen();\n    }\n\n    // used to toggle between welcome screen and keypad screen\n    togglescreen() {\n      const { opened } = this.state;\n      this.setState({\n        opened: !opened,\n      });\n    }\n\n\n    // clear the password and placeholder asterisks\n    clr() {\n      const btn = document.getElementById('clr');\n      this.styleBtnPress(btn);\n      const entry = document.getElementById('entry');\n      entry.innerHTML = '';\n      pw = '';\n      return 1;\n    }\n\n    // Used to grab the username from user\n    WelcomePage() {\n      return (\n        <div id=\"scr_1\">\n          <div className=\"centered\" id=\"welcome\">\n            <div className=\"window\">\n              <div className=\"w_header\">\n                <h1>Howdy!</h1>\n              </div>\n              <div className=\"w_content\">\n                <h2>Please enter your username:</h2>\n                <form onSubmit={this.updateCookie}>\n                  <input id=\"i_username\" type=\"text\" name=\"username\" autoFocus />\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n\n    // Called whenever a digit is added to the PIN\n    checkComplete() {\n      const { register } = this.props;\n      // if the PIN is the desired length, send it to the backend\n      if (pw.length >= 6) {\n        const http = new XMLHttpRequest();\n        const url = `https://${window.location.hostname}:3001/auth`;\n        http.open('POST', url, true);\n\n        // Send the proper header information along with the request\n        http.setRequestHeader('Content-type', 'application/json;charset=UTF-8');\n        const shouldRegister = register ? 1 : 0;\n        http.send(JSON.stringify({\n          username: shouldRegister ? '' : cookies.get('username'),\n          pw,\n          register: shouldRegister,\n        }));\n\n        // Clear the password\n        pw = '';\n        // reset placeholder asterisks back to 0\n        this.clr();\n      }\n    }\n\n    // This function changes subtle style options and\n    // reverts them back after .25 seconds to simulate the\n    // feel of depressing a button\n    styleBtnPress(btn) {\n      btn.style.boxShadow = '-2px -2px 12px 0 rgba(255,255,255,.5), 2px 2px 12px 0 rgba(0,0,0,.03)';\n      btn.style.fontSize = '3.7em';\n      btn.style.color = 'grey';\n      setTimeout(() => {\n        btn.style.boxShadow = '-6px -6px 12px 0 rgba(255,255,255,.5), 12px 12px 12px 0 rgba(0,0,0,.03)';\n        btn.style.fontSize = '4em';\n        btn.style.color = 'black';\n      }, 250);\n    }\n\n    // Called whenever a keypad button is pressed\n    enter(i) {\n      const entry = document.getElementById('entry');\n      const btn = document.getElementById(i);\n      // change size of button and add shadow for effect\n      this.styleBtnPress(btn);\n      // append the button's number value to the password\n      pw += i.toString();\n      // indicate to the user how many digits they have entered\n      entry.innerHTML += '*';\n      // check if the user has submitted enough digits to complete the PIN\n      this.checkComplete();\n      return 1;\n    }\n\n\n    render() {\n      const { opened } = this.state;\n      return (\n        <div className=\"outer\">\n          {!opened && this.WelcomePage()}\n\n          {opened\n                    && (\n                    <div id=\"scr_2\">\n                      <h1 id=\"entry\" className=\"entry\" />\n\n                      <div className=\"grid\">\n                        <div className=\"row\">\n                          <button type=\"button\" className=\"cell\" id=\"1\" onClick={() => this.enter(1)}>1</button>\n                          <button type=\"button\" className=\"cell\" id=\"2\" onClick={() => this.enter(2)}>2</button>\n                          <button type=\"button\" className=\"cell\" id=\"3\" onClick={() => this.enter(3)}>3</button>\n                        </div>\n                        {}\n                        <div className=\"row\">\n                          {}\n                          <button type=\"button\" className=\"cell\" id=\"4\" onClick={() => this.enter(4)}>4</button>\n                          <button type=\"button\" className=\"cell\" id=\"5\" onClick={() => this.enter(5)}>5</button>\n                          <button type=\"button\" className=\"cell\" id=\"6\" onClick={() => this.enter(6)}>6</button>\n                        </div>\n                        {}\n                        <div className=\"row\">\n                          {}\n                          <button type=\"button\" className=\"cell\" id=\"7\" onClick={() => this.enter(7)}>7</button>\n                          <button type=\"button\" className=\"cell\" id=\"8\" onClick={() => this.enter(8)}>8</button>\n                          <button type=\"button\" className=\"cell\" id=\"9\" onClick={() => this.enter(9)}>9</button>\n                        </div>\n                        <div className=\"row\">\n                          <div className=\"cell hidden\" />\n                          <button type=\"button\" className=\"cell\" id=\"0\" onClick={() => this.enter(0)}>0</button>\n                          <button type=\"button\" className=\"cell\" id=\"clr\" onClick={this.clr}>Clear</button>\n                        </div>\n                      </div>\n                    </div>\n                    )}\n        </div>\n      );\n    }\n}\n\nKeypad.propTypes = {\n  register: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react';\nimport QrReader from 'react-qr-reader';\nimport { FaArrowCircleRight } from 'react-icons/fa';\nimport PropTypes from 'prop-types';\n\nimport QRCode from 'qrcode.react';\n\nimport './Qr.css';\n\nexport default class Qr extends Component {\n  constructor(props) {\n    super(props);\n    const { username } = this.props;\n    // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript\n    const password = Math.random().toString(36).substring(2, 15)\n      + Math.random().toString(36).substring(2, 15);\n    this.state = {\n      result: 'No result',\n      code: `${username}:${password}`,\n    };\n    this.registerQR = this.registerQR.bind(this);\n  }\n\n    // if the current scan returns fresh value to the\n    // component state, decompose it into username and\n    // password parts and send it to the backend for processing\n    // after 5 seconds, delete scan from state\n    handleScan = (data) => {\n      const { result } = this.state;\n      const { register, socket } = this.props;\n\n      if (data && result !== data) {\n        this.setState({\n          result: data,\n        });\n        const colonPos = data.indexOf(':');\n        const username = data.slice(0, colonPos);\n        const password = data.slice(colonPos + 1);\n        const shouldRegister = register ? 1 : 0;\n        socket.emit('qrchannel', username, password, shouldRegister);\n        setTimeout(() => {\n          this.setState({\n            result: 'No result',\n          });\n        }, 5000);\n      }\n    }\n\n    // Log out any error messages that arise from the scanning process\n    // handleError = (err) => {\n    //  console.error(err);\n    // }\n\n    // this function will take the username and generated\n    // password from the qr code and send it to the back-\n    // end for registration\n    registerQR() {\n      const { code } = this.state;\n      const { socket } = this.props;\n      const colonPos = code.indexOf(':');\n      const username = code.slice(0, colonPos);\n      const password = code.slice(colonPos + 1);\n      socket.emit('qrchannel', username, password, 1);\n    }\n\n    // If in register mode, display the generated QR code\n    // otherwise, scan the user's webcam for QR codes\n    render() {\n      const { code, result } = this.state;\n      const { register } = this.props;\n      return (\n        <>\n          {register\n                    && (\n                    <div className=\"QRcontainer\">\n                      <QRCode\n                        style={{\n                          margin: '10% auto 5% auto',\n                          width: '50vh',\n                          maxWidth: '50%',\n                          height: '50%',\n                        }}\n                        value={code}\n                      />\n                      <h2 style={{ marginBottom: '3%' }}>Save this QR and continue</h2>\n                      <FaArrowCircleRight className=\"clickable\" onClick={this.registerQR} size={48} />\n                    </div>\n                    )}\n          {!register\n                    && (\n                    <div style={{\n                      height: '90%',\n                      display: 'flex',\n                      justifyContent: 'center',\n                      flexDirection: 'column',\n                      alignItems: 'center',\n                    }}\n                    >\n                      {result === 'No result'\n                            && <h1 style={{ fontSize: '4em' }}>Scan your QR Code</h1>}\n                      {result !== 'No result'\n                            && <h1 style={{ fontSize: '4em' }}>QR scan has been received!</h1>}\n                      <QrReader\n                        delay={300}\n                        onError={this.handleError}\n                        onScan={this.handleScan}\n                        style={{ width: '40%' }}\n                      />\n                    </div>\n                    )}\n        </>\n      );\n    }\n}\n\nQr.propTypes = {\n  socket: PropTypes.shape.isRequired,\n  register: PropTypes.string.isRequired,\n  username: PropTypes.string.isRequired,\n};\n","import React, { Component } from 'react'\nimport { ReactMic } from 'react-mic';\nimport { MdFiberManualRecord } from 'react-icons/md'\nimport { IconContext } from \"react-icons\";\nimport { FaStop } from 'react-icons/fa'\nimport Cookies from 'universal-cookie'\nimport './Voice.css'\nconst cookies = new Cookies();\n\n\nexport default class Voice extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            record: false,\n            opened: false || this.props.register\n        }\n        \n        this.onStop = this.onStop.bind(this)\n    }\n\n    // toggle between recording and not recording\n    // update the button style to simulate button being pressed\n    toggleRecording = () => {\n        this.setState({ record: !this.state.record });\n        let box = document.getElementById('play')\n        box.style.boxShadow = \"-2px -2px 12px 0 rgba(255,255,255,.5), 2px 2px 12px 0 rgba(0,0,0,.03)\";\n        box.style.fontSize = \"3.7em\";\n        box.style.color = \"grey\";\n        setTimeout(function () {\n            box.style.boxShadow = \"-6px -6px 12px 0 rgba(255,255,255,.5), 12px 12px 12px 0 rgba(0,0,0,.03)\";\n            box.style.fontSize = \"4em\";\n            box.style.color = \"black\";\n        }, 250);\n    }\n\n    // Toggle between welcome screen and record screen\n    togglescreen() {\n        const { opened } = this.state;\n        this.setState({\n            opened: !opened,\n        })\n    }\n\n    // Store username in cookie\n    update_cookie = event => {\n        event.preventDefault();\n\n        let username = document.getElementById('i_username').value\n\n        cookies.set('username', username)\n        this.togglescreen();\n    }\n\n    // When the recording is stopped, send the voice blob\n    // to the backend for processing\n    onStop(recordedBlob) {\n        console.log('recordedBlob is: ', recordedBlob);\n        let register = this.props.register ? 1 : 0;\n        this.props.socket.emit('voiceChannel', cookies.get('username'), recordedBlob.blob, register);\n    }\n\n    WelcomePage() {\n        return (\n            <div id=\"scr_1\">\n                <div className=\"centered\" id=\"welcome\">\n                    <div className=\"window\">\n                        <div className=\"w_header\">\n                            <h1>Howdy!</h1>\n                        </div>\n                        <div className=\"w_content\">\n                            <h2>Please enter your username:</h2>\n                            <form onSubmit={this.update_cookie}>\n                                <input id=\"i_username\" type=\"text\" name=\"username\" autoFocus />\n                            </form>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        )\n    }\n\n    render(){\n\n        return (\n            <>\n                {!this.state.opened && this.WelcomePage()}\n                {this.state.opened &&\n                    <>\n                        <div className=\"buttonsBar\" style={{\n                            height: '100%',\n                            width: '100%',\n                            justifyContent: 'center',\n                            alignItems: 'center',\n                            position: 'absolute',\n                            display: 'flex',\n                        }}>\n                            <button\n                                id=\"play\"\n                                onClick={this.toggleRecording}\n                                className=\"start play-stop\"\n                                type=\"button\">\n                                {!this.state.record &&\n                                    <IconContext.Provider value={{ color: \"#CC0004\", size: '15vw', className: 'record-button' }}>\n                                        <MdFiberManualRecord />\n                                    </IconContext.Provider>\n                                }\n                                {this.state.record &&\n                                    <IconContext.Provider value={{ color: \"#999\", size: '10vw' }}>\n                                        <FaStop />\n                                    </IconContext.Provider>\n                                }\n                            </button>\n                        </div>\n                        <div style={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            justifyContent: 'flex-end',\n                            alignItems: 'center',\n                            height: '100%'\n                        }}>\n                            <ReactMic\n                                record={this.state.record}\n                                visualSetting=\"frequencyBars\"\n                                className=\"sound-wave\"\n                                onStop={this.onStop}\n                                strokeColor=\"#000000\"\n                                backgroundColor=\"#EEEEEE\" />\n                        </div>\n                    </>\n                }\n            </>\n        )\n    }\n}","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"Selection\",\n  d: \"M 287.00,316.50            C 287.00,316.50 443.75,299.50 443.75,299.50              443.75,299.50 452.00,199.00 452.00,199.00              452.00,199.00 440.67,165.67 420.10,150.78              426.07,153.07 450.39,158.13 450.39,158.13              442.15,134.38 425.63,107.60 408.83,89.00              408.83,89.00 389.00,69.09 389.00,69.09              384.84,65.21 380.67,62.44 377.00,58.00              377.00,58.00 389.00,57.00 389.00,57.00              379.58,49.34 366.47,44.49 355.00,40.67              338.71,35.24 321.93,31.43 305.00,28.59              296.54,27.17 286.47,25.08 278.00,25.00              278.00,25.00 286.00,18.00 286.00,18.00              286.00,18.00 254.00,14.09 254.00,14.09              254.00,14.09 223.00,12.00 223.00,12.00              223.00,12.00 237.00,1.00 237.00,1.00              237.00,1.00 210.00,5.40 210.00,5.40              165.81,14.25 131.57,30.77 102.14,66.00              98.09,70.85 93.52,77.65 92.48,84.00              91.29,91.22 95.85,94.34 88.94,100.54              88.94,100.54 58.00,121.72 58.00,121.72              35.66,137.33 9.97,160.73 2.75,188.00              -0.21,199.20 1.78,200.03 2.00,210.00              -1.85,211.37 56.31,166.19 99.62,150.75              99.62,150.75 99.88,152.38 99.88,152.38              95.59,144.41 1.30,207.67 2.62,210.12              2.62,210.12 21.00,200.78 21.00,200.78              29.68,196.68 38.81,193.49 48.00,190.72              61.86,186.54 84.63,182.17 99.00,182.00              99.00,182.00 118.00,181.04 118.00,181.04              118.00,181.04 134.00,182.00 134.00,182.00              141.71,182.01 152.46,182.71 159.00,186.97              164.58,190.60 165.13,194.41 176.00,201.19              189.11,209.36 194.72,208.69 208.00,220.29              220.31,231.04 241.96,256.62 250.50,269.50              254.75,262.25 254.75,260.00 253.75,253.25              268.75,253.58 272.00,322.50 287.00,316.50 Z\"\n});\n\nvar SvgCrowHead = function SvgCrowHead(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 452 316\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgCrowHead, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/crow_head.0efb08a2.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable no-await-in-loop */\nimport React from 'react';\nimport { animated } from 'react-spring';\nimport { Keyframes } from 'react-spring/renderprops';\nimport { ReactComponent as Logo } from '../assets/paths/crow_head.svg';\n\nconst background = {\n  height: '99%',\n  width: '99%',\n  borderRadius: '50%',\n  background: 'black',\n};\n\nconst iconContainer = {\n  position: 'relative',\n  borderRadius: '50%',\n  overflow: 'hidden',\n  maxHeight: '80vw',\n  maxWidth: '80vw',\n};\n\nconst outline = {\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  zIndex: '10',\n  fill: 'none',\n  strokeWidth: '10px',\n  stroke: '#EEEEEE',\n  width: '122%',\n  height: '100%',\n  strokeDasharray: '1650',\n};\n\nconst Content = Keyframes.Spring(async (next) => {\n  // None of this will cause React to render, the component renders only once :-)\n  while (true) {\n    await next({\n      from: {\n        strokeDashoffset: 0,\n      },\n      strokeDashoffset: 1100,\n      config: {\n        mass: 1, tension: 70, friction: 20, precision: 0.1,\n      },\n    });\n    await next({\n      from: {\n        strokeDashoffset: 1100,\n      },\n      strokeDashoffset: 0,\n      config: {\n        mass: 1, tension: 50, friction: 20, precision: 0.1,\n      },\n    });\n  }\n});\n\nexport default function LoadingIcon(props) {\n  return (\n    <div style={{ ...props, ...iconContainer }}>\n      <div style={background} />\n      <Content>\n        {(style) => (\n          <animated.svg style={{ ...outline, ...style }}>\n            <Logo />\n          </animated.svg>\n\n        )}\n      </Content>\n    </div>\n  );\n}\n","import React, { Component } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport socketIOClient from 'socket.io-client';\nimport Dashboard from './pages/Dashboard';\nimport Keypad from './pages/Keypad';\nimport Qr from './pages/Qr';\nimport Voice from './pages/Voice';\nimport Loading from './pages/Loading';\n\n// Connect to the nodeJS server's socket\nconst socket = socketIOClient(`https://${window.location.hostname}:${3001}`, { secure: true });\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      dashboardState: null,\n      registerUsername: '',\n      numRegistered: 0,\n      registerMode: 0,\n      threshold: 0,\n      total: 0,\n      id: 'none',\n    };\n    this.registerHandler = this.registerHandler.bind(this);\n    this.liftstate = this.liftstate.bind(this);\n  }\n\n  componentDidMount() {\n    socket.emit('SettingsUpdate');\n    socket.on('SettingsUpdate', (settingsJSON) => {\n      this.setState(settingsJSON);\n    });\n    socket.on('Register', () => {\n      const { numRegistered, total } = this.state;\n      // this total comparison is a bit of a magic number, sorry :(\n      if (numRegistered >= total) {\n        this.setState({\n          registerUsername: '',\n          registerMode: 0,\n          numRegistered: 0,\n        });\n      } else {\n        this.setState({\n          numRegistered: numRegistered + 1,\n        });\n      }\n    });\n  }\n\n  liftstate(s) {\n    this.setState({\n      dashboardState: s,\n    });\n  }\n\n  Switch() {\n    const {\n      id, registerMode, numRegistered, registerUsername, dashboardState, threshold, total,\n    } = this.state;\n    if (registerMode) {\n      switch (numRegistered) {\n        case 1:\n          return <Keypad register=\"true\" />;\n        case 2:\n          return <Voice register=\"true\" socket={socket} />;\n        case 3:\n          return <Qr username={registerUsername} register=\"true\" socket={socket} />;\n        default:\n          return <h1>Attempted to register node type that does not exit</h1>;\n      }\n    } else {\n      switch (id) {\n        case 'auth':\n        case 'ui':\n          return (\n            <Dashboard\n              savedState={dashboardState}\n              liftState={this.liftstate}\n              socket={socket}\n              registerHandler={this.registerHandler}\n              threshold={parseInt(threshold, 10)}\n              total={parseInt(total, 10)}\n            />\n          );\n        case 'web':\n          return <Keypad />;\n        case 'qr':\n          return <Qr socket={socket} />;\n        case 'voice':\n          return <Voice socket={socket} />;\n        default:\n          return <h1>Unrecognized Node Type...</h1>;\n      }\n    }\n  }\n\n  registerHandler(username, fullname) {\n    this.setState({\n      registerMode: 1,\n      registerUsername: username,\n    });\n    console.log('in register handler with', username, fullname)\n    socket.emit('Register', username, fullname);\n  }\n\n\n  render() {\n    return (\n      <div className=\"App\">\n        {this.Switch()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App/App';\n\nrender((\n  <BrowserRouter>\n   <App />\n  </BrowserRouter>), document.getElementById('root')\n);"],"sourceRoot":""}